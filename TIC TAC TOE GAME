board = [' ' for x in range(10)]
def insertLetter(letter,pos):
    board[pos] = letter
def spaceIsFree(pos):
    return board[pos] == ' '
def printBoard(board):
    print('  |   |')
    print(' ' + board[1] + ' | ' + board[2] + ' | ' + board[3])
    print('  |   |')
    print('----------------')
    print('  |   |')
    print(' ' + board[4] + ' | ' + board[5] + ' | ' + board[6])
    print('  |   |')
    print('----------------')
    print('  |   |')
    print(' ' + board[7] + ' | ' + board[8] + ' | ' + board[9])
    print('  |   |')
    
    
def isWinner(a,b):
    return (a[7] == b and a[8] == b and a[9] == b) or(a[4] == b and a[5] == b and a[6] == b) or(a[1] == b and a[2] == b and a[3] == b) or(a[1] == b and a[4] == b and a[7] == b) or(a[2] == b and a[5] == b and a[8] == b) or(a[3] == b and a[6] == b and a[6] == b) or(a[1] == b and a[5] == b and a[9] == b) or(a[3] == b and a[5] == b and a[7] == b)
def playerMove():
    run = True
    while run:
        move = input('please select a position to place an \'X\' (1-9): ')
        try:
            move = int(move)
            if move > 0 and move < 10:
                if spaceIsFree(move):
                    run = False
                    insertLetter('X', move)
                else:
                    printf('Sorry,this space is occupied!')
            else:
                print('please type a number within the range!')
        except:
            print('please type a  different number!')
            
def compMove():
    possibleMoves = [x for x, letter in enumerate(board) if letter == ' ' and x != 0]
    move = 0
    
    for let in ['O', 'X']:
        for i in possibleMoves:
            boardCopy = board[:]
            boardCopy[i] = let
            if isWinner(boardCopy, let):
                move = i
                return move
    cornersOpen = []
    for i in possibleMoves:
        if i in [1,3,7,9]:
            cornersOpen.append(i)
    if len(cornersOpen) > 0:
        move = selectRandom(cornersOpen)
        return move
    if 5 in possibleMoves:
        move = 5
        return move
    edgesOpen = []
    for i in possibleMoves:
        if i in [2,4,6,8]:
            edgesOpen.append(i)
        if len(edgesOpen) > 0:
            move = selectRandom(edgesOpen)
        return move
def selectRandom(li):
    import random
    ln = len(li)
    r = random.randrange(0,ln)
    return li[r]
    
def isBoardFull(Board):
    if board.count(' ') > 1:
        return False
    else:
        return True
def main():
    print('Welcome to Tic Tac Toe!')
    printBoard(board)
    
    while not(isBoardFull(board)):
        if not(isWinner(board,'O')):
            playerMove()
            printBoard(board)
        else:
            print('Sorry,O\'s won this time!')
            break
            
        if not(isWinner(board,'X')):
            move = compMove()
            if move == 0:
                print(' Game Tie!')
            else:
                insertLetter('O', move)
                print('Computer placed an \'O\' in position', move,':')
                printBoard(board)
        else:
            print('X\'s won this time!Good Job!')
            break
            
    if isBoardFull(board):
        print('Tie Game!')
while True:
    input('Play again!')
    main()
